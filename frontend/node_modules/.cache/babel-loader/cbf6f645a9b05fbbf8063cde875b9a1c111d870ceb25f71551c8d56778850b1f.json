{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/redi full stack/mern-stack-app/frontend/src/pages/ProductDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductDetailPage = () => {\n  _s();\n  const {\n    productId\n  } = useParams(); // Get the productId parameter from the URL\n  const [product, setProduct] = useState(null); // State to store the product details\n  console.log(productId);\n  useEffect(() => {\n    // Fetch product details from the backend\n    fetch(`/api/products/${productId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch product details');\n      }\n      //console.log(response.json())\n      //return response.json();\n    })\n    /*  .then(data => {\n       console.log('Fetched productdetails:', data);\n       //setProduct(data);\n     }) */.catch(error => {\n      console.error('Error fetching product details:', error);\n    });\n  }, [productId]); // Dependency array with productId to re-run the effect when productId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), product ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product ID: \", product.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product Name: \", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductDetailPage, \"FZ0q+cju/CwecoHXjizyQqtuJyc=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetailPage;\nexport default ProductDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ProductDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ProductDetailPage","_s","productId","product","setProduct","console","log","fetch","then","response","ok","Error","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","id","name","_c","$RefreshReg$"],"sources":["/home/user/Documents/redi full stack/mern-stack-app/frontend/src/pages/ProductDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ProductDetailPage = () => {\n  const { productId } = useParams(); // Get the productId parameter from the URL\n  const [product, setProduct] = useState(null); // State to store the product details\n  console.log(productId)\n  \n  useEffect(() => {\n    // Fetch product details from the backend\n    fetch(`/api/products/${productId}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch product details');\n        }\n        //console.log(response.json())\n        //return response.json();\n      })\n     /*  .then(data => {\n        console.log('Fetched productdetails:', data);\n        //setProduct(data);\n      }) */\n      .catch(error => {\n        console.error('Error fetching product details:', error);\n      });\n  }, [productId]); // Dependency array with productId to re-run the effect when productId changes\n\n  return (\n    <div>\n      <h2>Product Detail</h2>\n      {product ? (\n        <div>\n          <p>Product ID: {product.id}</p>\n          <p>Product Name: {product.name}</p>\n          {/* Display other product details */}\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ProductDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9CU,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EAEtBN,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAE,iBAAgBL,SAAU,EAAC,CAAC,CAChCM,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MACA;MACA;IACF,CAAC;IACF;AACL;AACA;AACA,UAHK,CAIEC,KAAK,CAACC,KAAK,IAAI;MACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBf,OAAO,gBACNJ,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,GAAG,cAAY,EAACX,OAAO,CAACgB,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BnB,OAAA;QAAAe,QAAA,GAAG,gBAAc,EAACX,OAAO,CAACiB,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC,gBAENnB,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,iBAAiB;EAAA,QACCH,SAAS;AAAA;AAAAwB,EAAA,GAD3BrB,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}